---
    - name: ensure some pkgs ate installed.
      apt:
       pkg: 
         - vim
         - net-tools
         - apt-transport-https
         - ca-certificates
         - curl 
       state: present
       update_cache: true

    - name: Get gpg key
      shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/gpg"
      args:
        creates: /etc/apt/gpg

    - name: Add Repository
      shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null
      become: true

    - name: Installing ....
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: true

    - name: Add live-restore to daemon.json
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "live-restore": true,
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            }
          }
        mode: '0644'
      notify: Restart Docker

    - name: Create Share Network
      import_tasks: network.yaml

    - name: Create Docker volume directory
      file:
        path: '{{ GLOBAL_VOLUME_PATH }}'
        state: directory
        owner: '{{ GLOBAL_USERSYS }}'
        group: '{{ GLOBAL_GROUPSYS }}'
        mode: '0755'

    - name: Set permissions for Docker volume
      command:
        cmd: chown -R '{{ GLOBAL_USERSYS }}':'{{ GLOBAL_GROUPSYS }}' '{{ GLOBAL_VOLUME_PATH }}'


